const express=require("express");
const router=express.Router()
var cookieParser = require('cookie-parser');
router.use(cookieParser());
router.use(express.json());
var conf="";
const path = './node.conf'
const jslib = require("../controller/jsonread");
const fetch = require("../controller/fetch");
router.post("/",async (req,res,next)=>{
var msg;
var resp=jslib.cookieconf(req.cookies["zcash-ui"]);
if(resp.error)
{
res.send(resp);
}
else
{
//code for settings req;
//console.log(resp);
var fan=req.body.fan;
var update=req.body.update;
var txn=req.body.txn;
var tor=req.body.tor;
var addnode=req.body.add;
var bannode=req.body.ban;
var drv = req.body.drv;
var writedata = JSON.parse(resp.msg);
var settings = {};
if(fan)
settings.fan="true";
if (Array.isArray(bannode) && bannode.length) {
    settings.ban=bannode;
}
if (Array.isArray(addnode) && addnode.length) {
    settings.add=addnode;
}
if(update)
settings.update="true";
if(txn)
{
settings.txn="true";
conf+="sendfreetransactions=1 \n";
}
if(tor)
{
settings.tor="true";
conf+="proxy=127.0.0.1:9050 \n";
}
if(drv!=""||drv!=null)
settings.drv=drv;
var meth="clearbanned";
var params =[];
var data = {"method":meth , "params":params};
var retvarfet = await fetch.rpc(data);
console.log("fetch = ");
console.log(retvarfet);
if(retvarfet.error==null&&retvarfet.id=="zcashnode")
{


}
console.log("\n response = ");
writedata.settings = settings;
console.log(JSON.stringify(writedata));
var writeret = jslib.writeconf(writedata);
if(!writeret.error)
{
var respmsg = { "error":false , "message":"success"};
res.send(respmsg);
}
else
{
var respmsg = {"error":true , "message":writeret.message};
res.send(respmsg);
}


}


});


router.get("/",(req,res,next)=>{
res.sendFile( '/home/pi/node/views/settings.html');

});


module.exports=router
